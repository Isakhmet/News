scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {

    getTags: [Tags]! @all

    getLocale: [Locale]

    lastNews(id: [Int!]!): [News]!

    newsFromElastic(
        search: String,
        limit: Int,
        page: Int,
        tags: String
    ): [News]
}

type Mutation {
    addTags(name: String @rules(apply: ["required"])): Tags @create
    addLocale(
        locale: String @rules(apply: ["required"])
        name: String @rules(apply: ["required"])
    ): Locale @create(model: "App\\Models\\Locale")
    latestNews(
        title: String @rules(apply: ["required"])
        alias: String @rules(apply: ["required"])
        anons: String @rules(apply: ["required"])
        image: String
        image_copyright: String
        description: String @rules(apply: ["required"])
        status: Boolean @rules(apply: ["required"])
        active_at: String @rules(apply: ["required"])
        active_end:String
        settings: String @rules(apply: ["required"])
        created_at: String
        updated_at: String
        tags: [Int] @rules(apply: ["required"])
        locale: String
    ): String

}

type News {
    id: ID
    title: String!
    alias: String!
    anons: String!
    image: String
    image_copyright: String
    description: String!
    status: String!
    active_at: String!
    active_end:String
    settings: String!
    created_at: String!
    updated_at: String
    tags: [Int]
    locale: String
}

type Locale {
    id: ID
    locale: String
    name: String
}

type Tags {
    id: ID
    name: String!
}


